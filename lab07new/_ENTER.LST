Microsoft (R) Macro Assembler Version 5.10                  4/9/18 11:10:48

                                                             Page     1-1


				PUBLIC	PR_InputInt
				EXTRN	sEnter:BYTE
				
 0000				Data	SEGMENT	PUBLIC
 0000  0D 0A 3C 65 6E 74		sSucceed	DB	13,10,'<entered
				>',13,10,'$'
       65 72 65 64 3E 0D	
       0A 24			
 000E				Data	ENDS
				
 0000				Code	SEGMENT	PUBLIC
					ASSUME CS:Code
				
				
				;----------------------------------------------
				----------------------------------------
				;Ввод целого числа со знаком и без; возвращает 
				введенное число через AX
				;----------------------------------------------
				----------------------------------------
 0000				PR_InputInt	PROC	NEAR
 0000  53					PUSH	BX		
								;в ВХ будем хра
				нить промежуточный результат ввода
 0001  52					PUSH	DX		
								;DX для печати
 0002  56					PUSH	SI		
								;наличие знака
 0003  B8 0000					MOV		AX,0
 0006  BB 0000					MOV		BX,0
				
 0009  B4 09					MOV		AH,9
 000B  8D 16 0000 E				LEA		DX,sEnter
							;воспользуемся пока что
				 ДХ чтобы вывести приглашение к вводу
 000F  CD 21					INT		21h
 0011  BA 0000					MOV		DX,0   	
							;очистим ДХ
				
 0014				LII_Loop:
 0014  B4 01					MOV		AH,1
 0016  CD 21					INT		21h	
									;получа
				ем в АЛ символ из стдин
				
 0018  3C 0D					CMP		AL,13	
								;если в АЛ - ен
				тер, то закругляемся
 001A  74 1B					JE		LII_Success   ;
				jump если равно ^
				
 001C  3C 2D					CMP		AL,2Dh 	
							; если АЛ - минус
 001E  75 05					JNE		LII_NotMinus  ;
Microsoft (R) Macro Assembler Version 5.10                  4/9/18 11:10:48

                                                             Page     1-2


				jump если не минус
 0020  BE 0001					MOV		SI,1	
								;запомним что ч
				исло отрицательное
 0023  EB EF					JMP		LII_Loop  
						;следующий символ
				
 0025				LII_NotMinus:
				
						;#define юзверь не дурак и ввод
				ит только цифры
 0025  50					PUSH	AX		
								;сохраним симво
				л из АЛ в стек
 0026  8B C3					MOV		AX,BX         ;
				в АХ то, что уже конвертировали или ноль
 0028  BB 000A					MOV		BX,10	
								;потому что асс
				емблер не умеет MUL 10
 002B  F7 E3					MUL		BX	
									;умножа
				ем уже введенную часть на 10  AX *= 10
 002D  5B					POP		BX	
									;получи
				м обратно символ
 002E  80 EB 30					SUB		BL,'0'	
							;преобразуем символ в ц
				ифру("а" - "0")
 0031  B7 00					MOV		BH,0	
								;обнуляем ВН на
				 всякий 
 0033  03 D8					ADD		BX,AX	
								;добавим цифру 
				к введенной части.
 0035  EB DD					JMP		LII_Loop
				
 0037				LII_Success:
 0037  8B C3					MOV	AX,BX		
								;в АХ результат
 0039  83 FE 01					CMP	SI,1		
								;если нужно, то
				 умножим на -1
 003C  75 02					JNE	LII_End		
							;иначе эпилог функции
 003E  F7 D8					NEG	AX		
									;АХ *= 
				-1
				
 0040				LII_End:
 0040  50					PUSH	AX		
								;сохраняем АХ, 
				чтобы вывести сообщение
 0041  8D 16 0000 R				LEA		DX,sSucceed
 0045  B4 09					MOV		AH,9
Microsoft (R) Macro Assembler Version 5.10                  4/9/18 11:10:48

                                                             Page     1-3


 0047  CD 21					INT		21h
 0049  58					POP		AX	
									;восста
				навливаем регистры
 004A  5E					POP		SI
 004B  5A					POP		DX
 004C  5B					POP		BX
 004D  C3					RET
 004E				PR_InputInt	ENDP
				;----------------------------------------------
				----------------------------------------
				
 004E				Code	ENDS
				
				END
Microsoft (R) Macro Assembler Version 5.10                  4/9/18 11:10:48

                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CODE . . . . . . . . . . . . . .  	004E	PARA	PUBLIC	
DATA . . . . . . . . . . . . . .  	000E	PARA	PUBLIC	

Symbols:            

                N a m e         	Type	 Value	 Attr

LII_END  . . . . . . . . . . . .  	L NEAR	0040	CODE
LII_LOOP . . . . . . . . . . . .  	L NEAR	0014	CODE
LII_NOTMINUS . . . . . . . . . .  	L NEAR	0025	CODE
LII_SUCCESS  . . . . . . . . . .  	L NEAR	0037	CODE

PR_INPUTINT  . . . . . . . . . .  	N PROC	0000	CODE	Global	Length = 004E

SENTER . . . . . . . . . . . . .  	V BYTE	0000		External
SSUCCEED . . . . . . . . . . . .  	L BYTE	0000	DATA

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  _enter		
@VERSION . . . . . . . . . . . .  	TEXT  510		


     73 Source  Lines
     73 Total   Lines
     18 Symbols

  46722 + 442267 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
